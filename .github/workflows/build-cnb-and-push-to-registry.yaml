name: Build CNB and push to registry
on:
  workflow_call:  
    inputs:
      registry_root:
        required: true
        type: string
      image_tagged:
        required: true
        type: string
      source_image:
        required: true
        type: string
      default_port:
        required: true
        type: string
      fetch-depth:
        required: false
        type: number
        default: 0   
  workflow_dispatch: {}
  repository_dispatch:
    types: [run]
jobs:
  build_and_push_to_registry:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.fetch-depth }}
# CNB are not multi-arch ready as of May 2022 so this is not needed
# It causes problems with this workflow so test later
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tags based on git data
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ inputs.registry_root }}${{ inputs.image_tagged }}/${{ github.ref_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{sha}}
      - name: Create secrets environment file for pack command
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: |
          echo -n "$SECRETS_CONTEXT" | jq -r '[to_entries[]|select(.key|startswith("K8S_SECRET_"))]|map("\(.key|sub("K8S_SECRET_"; ""))=\(.value|tostring|@sh)")|.[]' > secrets.env
      - name: Build using heroku/buildpacks:20 CNB
        uses: dfreilich/pack-action@v2.1.1
        with:
          args: 'build ${{ inputs.source_image }} --env-file secrets.env --builder heroku/buildpacks:20'
      - name: Add default port to image
        run: |          
          rm secrets.env
          cat > Dockerfile <<EOF
          ARG source_image
          FROM ${{ inputs.source_image }}
          ARG default_port
          ENV PORT=\${default_port}
          EXPOSE \${default_port}
          EOF
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            default_port=${{ inputs.default_port }}
            source_image=${{ inputs.source_image }}
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
