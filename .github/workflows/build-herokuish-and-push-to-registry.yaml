name: Build CNB and push to registry
on:
  workflow_call:  
    inputs:
      registry_root:
        required: true
        type: string
      image_tagged:
        required: true
        type: string
      source_image:
        required: true
        type: string
      default_port:
        required: true
        type: string
      BUILDPACK_URL:
        required: false
        type: string
        default: ''  
  workflow_dispatch: {}
  repository_dispatch:
    types: [run]
jobs:
  build_and_push_to_registry:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
# CNB are not multi-arch ready as of May 2022 so this is not needed
# It causes problems with this workflow so test later
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create tags based on git data
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ inputs.registry_root }}${{ inputs.image_tagged }}/${{ github.ref_name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value={{sha}}
      - name: Create build environment
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}
        run: |
          echo -n "$SECRETS_CONTEXT" | jq -r '[to_entries[]|select(.key|startswith("K8S_SECRET_"))]|map("\(.key|sub("K8S_SECRET_"; ""))=\(.value|tostring|@sh)")|.[]' > secrets.env     
          cat > Dockerfile <<EOF
          FROM gliderlabs/herokuish as builder
          COPY . /tmp/app
          ARG BUILDPACK_URL \
              default_port
          ENV USER=herokuishuser
          RUN --mount=type=secret,id=secrets_env \
              . /run/secrets/secrets_env && \
              /bin/herokuish buildpack build
          
          FROM gliderlabs/herokuish
          COPY --chown=herokuishuser:herokuishuser --from=builder /app /app
          ENV PORT=\${default_port}
          ENV USER=herokuishuser
          EXPOSE \${default_port}
          CMD ["/bin/herokuish", "procfile", "start", "web"]
          EOF
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            default_port=${{ inputs.default_port }}
            BUILDPACK_URL=${{ inputs.BUILDPACK_URL }}
          platforms: linux/amd64
          push: true
          secret-files: |
            "secrets_env=./secrets.env"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
